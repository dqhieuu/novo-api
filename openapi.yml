openapi: 3.0.2
info:
  title: Novo App
  version: '1.0'
  description: >-
    A book server that serves all kinds of books (novels, comics, manga and
    whatnots)
  contact: {}
servers:
  - url: 'http://localhost:7001'
paths:
  '/oauth/{provider}':
    get:
      summary: OAuth login initialize
      description: Redirects client to OAuth provider page for 3-legged authentication.
      responses:
        '302':
          description: Redirect to the provider page
        '404':
          description: Provider not found
      tags:
        - Users
      parameters: []
  /login:
    post:
      summary: Password login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login success
        '401':
          description: Invalid credentials
      tags:
        - Users
      parameters: []
    get:
      summary: Oauth login
      description: >-
        Client goes to this page after having received the oauth code from
        provider (Google)
      parameters:
        - name: provider
          in: path
          required: true
          description: The provider of the OAuth service.
          schema:
            type: string
        - name: code
          in: path
          required: true
          description: >-
            Code received after client successfully verified by the oauth
            provider side.
          schema:
            type: string
      responses:
        '200':
          description: Login success
        '401':
          description: Invalid credentials
      tags:
        - Users
  '/search-suggest/{query}':
    get:
      summary: Search suggestion
      description: Suggestion when typing text in the search box.
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Empty list returns 200 also
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        thumbnail:
                          type: string
                        title:
                          type: string
      tags:
        - Book Groups
  '/search/{query}':
    get:
      summary: Search result
      description: Search result from query.
      parameters:
        - name: query
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Empty list also returns 200 
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        thumbnail:
                          type: string
                          example: ./img/test.png
                        title:
                          type: string
                          example: Boku no pico
      tags:
        - Book Groups
tags:
  - name: Users
    description: For all user related operations.
  - name: Book Groups
    description: Representing folders for book chapters (can also be called book titles).
  - name: Book Chapters
    description: May hold hypertext content or images
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  links: {}
  callbacks: {}
  schemas: {}
security:
  - bearerAuth: []